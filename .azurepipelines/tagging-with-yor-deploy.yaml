name: dev - tagging-with-yor (TerraformTask) - Deploy

pool: 
  vmImage: 'ubuntu-latest'

trigger:
 - none

variables:
  - group: var-terraform-backend

stages:
  - stage: Plan
    jobs:
      - job: Terraform_plan
        steps:
          - checkout: self
            fetchDepth: 0 # Seems to be required for Yor, otherwise "git blame" does not work

          - task: TerraformTaskV4@4
            name: 'Terraform_Init'
            displayName: 'Terraform Init'
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: '$(AZURE_SVC_NAME)'
              backendAzureRmResourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME)'
              backendAzureRmStorageAccountName: '$(AZURE_STORAGE_ACCOUNT_NAME)'
              backendAzureRmContainerName: 'tfstate'
              backendAzureRmKey: 'azure-auto-tagging-with-yor.ado.tfstate'
              workingDirectory: '$(System.DefaultWorkingDirectory)/yor'

          # - task: AzureCLI@2
          #   name: 'Add_metadata_tagging_using_Yor'
          #   displayName: 'Add metadata tagging using Yor'
          #   inputs:
          #     azureSubscription: $(AZURE_SVC_NAME)
          #     scriptType: 'bash'
          #     scriptLocation: 'scriptPath'
          #     scriptPath: 'yor.sh'
          #     addSpnToEnvironment: true
          #     workingDirectory: "$(System.DefaultWorkingDirectory)/yor"
          #     useGlobalConfig: true
          #   env:
          #     ARM_TENANT_ID: $(AZURE_TENANT_ID)
          #     ARM_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTION_ID)
          #     ARM_CLIENT_ID: $(AZURE_CLIENT_ID)
          #     TF_VAR_DEFAULT_SUBSCRIPTION_ID: $(SUBSCRIPTION_ID)
          #     ARM_USE_AZUREAD: true
          #     ARM_USE_OIDC: true

          - task: Bash@3
            name: 'Add_metadata_tagging_using_Yor'
            displayName: 'Add metadata tags using Yor'
            inputs:
              workingDirectory: '$(System.DefaultWorkingDirectory)/yor'
              targetType: 'inline'
              script: |
                ./yor.sh
          
          - task: TerraformTaskV4@4
            name: 'Terraform_Validate'
            displayName: 'Terraform Validate'
            inputs:
              provider: 'azurerm'
              command: 'validate'   

          - task: TerraformTaskV4@4
            name: 'terraformPlan'
            displayName: 'Terraform Plan'
            inputs:
              provider: 'azurerm'
              command: 'plan'
              commandOptions: '-input=false -var-file "./terraform.tfvars" -out=tfplan -var="default_subscription_id=$(SUBSCRIPTION_ID)" -var="deployed_from=ADO"'
              workingDirectory: '$(System.DefaultWorkingDirectory)/yor'
              environmentServiceNameAzureRM: '$(AZURE_SVC_NAME)'
            env:
              ARM_USE_AZUREAD: true
              ARM_USE_OIDC: true

          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: '$(Build.SourcesDirectory)'
              includeRootFolder: false
              archiveType: 'tar'
              tarCompression: 'gz'
              archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).tgz'
              replaceExistingArchive: true
              displayName: 'Create Plan Artifact'

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: '$(Build.BuildId)-tfplan'
              publishLocation: 'Container'
              displayName: 'Publish Plan Artifact'
  
  - stage: Deploy
    dependsOn: [ 'Plan' ]
    jobs:
    - deployment: Terraform_Deploy
      environment: 'development'
      continueOnError: false
      timeoutInMinutes: 600
      strategy:
       runOnce:
        deploy:
          steps:
            - checkout: none

            - task: DownloadBuildArtifacts@0
              inputs:
                artifactName: '$(Build.BuildId)-tfplan'
                displayName: 'Download Plan Artifact'

            - task: ExtractFiles@1
              inputs:
                archiveFilePatterns: '$(System.ArtifactsDirectory)/$(Build.BuildId)-tfplan/$(Build.BuildId).tgz'
                destinationFolder: "$(System.DefaultWorkingDirectory)"
                cleanDestinationFolder: false
                overwriteExistingFiles: true
                displayName: 'Extract Terraform Plan Artifact'
                
            - task: TerraformTaskV4@4
              name: 'terraformApply'
              displayName: 'Terraform Apply'
              inputs:
                provider: 'azurerm'
                command: 'apply'
                commandOptions: '-auto-approve -input=false tfplan'
                workingDirectory: '$(System.DefaultWorkingDirectory)/yor'
                environmentServiceNameAzureRM: $(AZURE_SVC_NAME)